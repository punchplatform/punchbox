#!/bin/bash -ue
# This script create an extra cert for Gateway.
# When Kibana and Gateway are not on the same server,
# Gateway cert must have Kibana hostname & IP in its SAN.  


# DIR with existing certs generated by `create-cert-for-cybels-analytics.sh`
cert_dir=../punch/resources/security/platform_certs/

# Kibanas
kibana1_name=server1
kibana1_ip=192.168.128.21
kibana2_name=server3
kibana2_ip=192.168.128.23

# Gateways
gateway1_name=server2
gateway1_ip=192.168.128.22
gateway2_name=server4
gateway2_ip=192.168.128.24


# Gateway1
dn_template="/C=FR/ST=IDF/L=Paris/O=Thales/OU=Cybels Analytics"
subject_gateway=$dn_template"/CN="$gateway1_name
altname="subjectAltName=DNS:"$gateway1_name",IP:"$gateway1_ip",DNS:"$gateway2_name",IP:"$gateway2_ip",DNS:"$kibana1_name",IP:"$kibana1_ip",DNS:"$kibana2_name",IP:"$kibana2_ip
echo "[ req_ext ]" > $cert_dir/$gateway1_name/$gateway1_name.ext
echo $altname >> $cert_dir/$gateway1_name/$gateway1_name.ext

# Csr with existing key
openssl req -new -sha256 -nodes -subj "$subject_gateway" -addext "$altname" -out $cert_dir/$gateway1_name/$gateway1_name.csr -key $cert_dir/$gateway1_name/server.pem
# Crt with previous csr
openssl x509 -req -extensions req_ext -extfile $cert_dir/$gateway1_name/$gateway1_name.ext -in $cert_dir/$gateway1_name/$gateway1_name.csr -out $cert_dir/$gateway1_name/server-gateway.crt -CA $cert_dir/root-ca.crt -CAkey $cert_dir/root-ca.key -CAserial $cert_dir/root-ca.serial -days 1000 
# Keystore with crt converted in p12
openssl pkcs12 -export -in $cert_dir/$gateway1_name/server-gateway.crt -inkey $cert_dir/$gateway1_name/server.pem -chain -CAfile  $cert_dir/root-ca.crt -name  $gateway1_name -passout  pass:$(cat $cert_dir/$gateway1_name/keystore-pass) -out $cert_dir/$gateway1_name/server-gateway.p12
keytool -importkeystore -srckeystore $cert_dir/$gateway1_name/server-gateway.p12 -srcstoretype pkcs12 -srcstorepass $(cat $cert_dir/$gateway1_name/keystore-pass) -destkeystore $cert_dir/$gateway1_name/server-gateway.jks -deststoretype jks -alias $gateway1_name -noprompt -storepass $(cat $cert_dir/$gateway1_name/keystore-pass)

# Clean
rm $cert_dir/$gateway1_name/$gateway1_name.ext
rm $cert_dir/$gateway1_name/$gateway1_name.csr


# Gateway2
dn_template="/C=FR/ST=IDF/L=Paris/O=Thales/OU=Cybels Analytics"
subject_gateway=$dn_template"/CN="$gateway2_name
altname="subjectAltName=DNS:"$gateway1_name",IP:"$gateway1_ip",DNS:"$gateway2_name",IP:"$gateway2_ip",DNS:"$kibana1_name",IP:"$kibana1_ip",DNS:"$kibana2_name",IP:"$kibana2_ip
echo "[ req_ext ]" > $cert_dir/$gateway2_name/$gateway2_name.ext
echo $altname >> $cert_dir/$gateway2_name/$gateway2_name.ext

# Csr with existing key
openssl req -new -sha256 -nodes -subj "$subject_gateway" -addext "$altname" -out $cert_dir/$gateway2_name/$gateway2_name.csr -key $cert_dir/$gateway2_name/server.pem
# Crt with previous csr
openssl x509 -req -extensions req_ext -extfile $cert_dir/$gateway2_name/$gateway2_name.ext -in $cert_dir/$gateway2_name/$gateway2_name.csr -out $cert_dir/$gateway2_name/server-gateway.crt -CA $cert_dir/root-ca.crt -CAkey $cert_dir/root-ca.key -CAserial $cert_dir/root-ca.serial -days 1000 
# Keystore with crt converted in p12
openssl pkcs12 -export -in $cert_dir/$gateway2_name/server-gateway.crt -inkey $cert_dir/$gateway2_name/server.pem -chain -CAfile  $cert_dir/root-ca.crt -name  $gateway2_name -passout  pass:$(cat $cert_dir/$gateway2_name/keystore-pass) -out $cert_dir/$gateway2_name/server-gateway.p12
keytool -importkeystore -srckeystore $cert_dir/$gateway2_name/server-gateway.p12 -srcstoretype pkcs12 -srcstorepass $(cat $cert_dir/$gateway2_name/keystore-pass) -destkeystore $cert_dir/$gateway2_name/server-gateway.jks -deststoretype jks -alias $gateway2_name -noprompt -storepass $(cat $cert_dir/$gateway2_name/keystore-pass)

# Clean
rm $cert_dir/$gateway2_name/$gateway2_name.ext
rm $cert_dir/$gateway2_name/$gateway2_name.csr
