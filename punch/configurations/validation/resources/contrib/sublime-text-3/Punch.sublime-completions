 {
    "scope": "source.punch",
    "completions":
    [
        "Tuple",
        "root",
        "tmp",
        { "trigger": "test\tsnippet", "contents": "// @test(fields=[logs][data]) $0" },
        { "trigger": "cef\toperator", "contents": "cef().on(${1:root:[logs][data]}).into(${2:tmp:[cef]});$0" },
        { "trigger": "contains\toperator", "contents": "contains(${1:your resource Tuple},${2:what you look for}).on(${3:root:[logs][data]}).into(${4:tmp:[contains]});$0" },
        { "trigger": "convert\toperator", "contents": "convert(${1:root:[logs][data]}).into(${2:tmp:[converted]});$0" },
        { "trigger": "csv\toperator", "contents": "csv().on(${1:root:[logs][data]}).into(${2:tmp:[csv]});$0" },
        { "trigger": "kv\toperator", "contents": "kv().on(${1:root:[logs][data]}).into(${2:tmp:[kv]});$0" },
        { "trigger": "date\toperator", "contents": "date(${1:\"iso\"}, ${2:\"MMM dd HH:mm:ss\"}).on(${3:root:[logs][data]}).into(${4:tmp:[ts]});$0" },
        { "trigger": "dissect\toperator", "contents": "dissect(\"${1:%{a}}\").on(${2:root:[logs][data]}).into(${3:tmp:[dissect]});$0" },
        { "trigger": "move\toperator", "contents": "move(${1:root:[logs][log][a]}).into(${2:root:[logs][log][b]});$0" },
        { "trigger": "grok\toperator", "contents": "grok(\"${1:%{PATTERN:tmp:[grokpattern]}}\").on(${2:root:[logs][data]});$0" },
        { "trigger": "geoip\toperator", "contents": "geoip().on(${1:root:[ip]}).into(${2:tmp:[geoip]});$0" },
        { "trigger": "siddhi\toperator", "contents": "siddhi(${1:\"siddhi_rule\"}, ${2:\"output_stream\"}).send(${3:root:[logs][log]}).into(${4:tmp:[output_rule]);$0" },
        { "trigger": "syslogHeader\toperator", "contents": "syslogHeader().on(${1:root:[logs][data]}).into(${2:root:[logs][log][rep]});$0" },
        { "trigger": "add", "contents": "add($0)" },
        { "trigger": "append", "contents": "append($0)" },
        { "trigger": "asArray", "contents": "asArray($0)" },
        { "trigger": "asBoolean", "contents": "asBoolean($0)" },
        { "trigger": "asCollection", "contents": "asCollection($0)" },
        { "trigger": "asDouble", "contents": "asDouble($0)" },
        { "trigger": "asDoubleArray", "contents": "asDoubleArray($0)" },
        { "trigger": "asFloat\t(deprecated)", "contents": "asFloat($0)" },
        { "trigger": "asInt\t(deprecated)", "contents": "asInt($0)" },
        { "trigger": "asLong", "contents": "asLong($0)" },
        { "trigger": "asLongArray", "contents": "asLongArray($0)" },
        { "trigger": "asSet", "contents": "asSet($0)" },
        { "trigger": "asString", "contents": "asString($0)" },
        { "trigger": "attach", "contents": "attach($0)" },
        { "trigger": "concat", "contents": "concat($0)" },
        { "trigger": "contains", "contents": "contains($0)" },
        { "trigger": "containsOneOf", "contents": "containsOneOf($0)" },
        { "trigger": "cutPrefix", "contents": "cutPrefix($0)" },
        { "trigger": "cutSuffix", "contents": "cutSuffix($0)" },
        { "trigger": "decodeBase64", "contents": "decodeBase64($0)" },
        { "trigger": "dump", "contents": "dump($0)" },
        { "trigger": "duplicate", "contents": "duplicate($0)" },
        { "trigger": "elements", "contents": "elements($0)" },
        { "trigger": "empty", "contents": "empty($0)" },
        { "trigger": "encodeBase64", "contents": "encodeBase64($0)" },
        { "trigger": "endsWith", "contents": "endsWith($0)" },
        { "trigger": "equalsOneOf", "contents": "equalsOneOf($0)" },
        { "trigger": "exists", "contents": "exists($0)" },
        { "trigger": "get", "contents": "get($0)" },
        { "trigger": "getAttachment", "contents": "getAttachment($0)" },
        { "trigger": "getByKey", "contents": "getByKey($0)" },
        { "trigger": "getDeep", "contents": "getDeep($0)" },
        { "trigger": "getElement", "contents": "getElement($0)" },
        { "trigger": "getEntries", "contents": "getEntries($0)" },
        { "trigger": "getKeys", "contents": "getKeys($0)" },
        { "trigger": "getSingleChild", "contents": "getSingleChild($0)" },
        { "trigger": "getType", "contents": "getType($0)" },
        { "trigger": "getValues", "contents": "getValues($0)" },
        { "trigger": "hasKey", "contents": "hasKey($0)" },
        { "trigger": "indexOf", "contents": "indexOf($0)" },
        { "trigger": "isArray", "contents": "isArray($0)" },
        { "trigger": "isBooleanLeaf", "contents": "isBooleanLeaf($0)" },
        { "trigger": "isDoubleLeaf", "contents": "isDoubleLeaf($0)" },
        { "trigger": "isEmpty", "contents": "isEmpty($0)" },
        { "trigger": "isEquals", "contents": "isEquals($0)" },
        { "trigger": "isLeaf", "contents": "isLeaf($0)" },
        { "trigger": "isLongLeaf", "contents": "isLongLeaf($0)" },
        { "trigger": "isRoot", "contents": "isRoot($0)" },
        { "trigger": "isSet", "contents": "isSet($0)" },
        { "trigger": "isStringLeaf", "contents": "isStringLeaf($0)" },
        { "trigger": "isTuple", "contents": "isTuple($0)" },
        { "trigger": "leafAsString", "contents": "leafAsString($0)" },
        { "trigger": "length", "contents": "length($0)" },
        { "trigger": "matches", "contents": "matches($0)" },
        { "trigger": "mergeWith", "contents": "mergeWith($0)" },
        { "trigger": "merge", "contents": "merge($0)" },
        { "trigger": "remove", "contents": "remove($0)" },
        { "trigger": "removeElement", "contents": "removeElement($0)" },
        { "trigger": "replace", "contents": "replace($0)" },
        { "trigger": "replaceAll", "contents": "replaceAll($0)" },
        { "trigger": "replaceAllKeyValues", "contents": "replaceAllKeyValues($0)" },
        { "trigger": "replaceAllKeys", "contents": "replaceAllKeys($0)" },
        { "trigger": "replaceAllValues", "contents": "replaceAllValues($0)" },
        { "trigger": "replaceFirst", "contents": "replaceFirst($0)" },
        { "trigger": "select", "contents": "select($0)" },
        { "trigger": "set", "contents": "set($0)" },
        { "trigger": "size", "contents": "size($0)" },
        { "trigger": "skip", "contents": "skip($0)" },
        { "trigger": "split", "contents": "split($0)" },
        { "trigger": "splitAsTupleArray", "contents": "splitAsTupleArray($0)" },
        { "trigger": "startsWith", "contents": "startsWith($0)" },
        { "trigger": "substring", "contents": "substring($0)" },
        { "trigger": "toAsciiJson", "contents": "toAsciiJson($0)" },
        { "trigger": "toEscapedJson", "contents": "toEscapedJson($0)" },
        { "trigger": "toFlat", "contents": "toFlat($0)" },
        { "trigger": "toJson", "contents": "toJson($0)" },
        { "trigger": "toLowerCase", "contents": "toLowerCase($0)" },
        { "trigger": "toMap", "contents": "toMap($0)" },
        { "trigger": "toString", "contents": "toString($0)" },
        { "trigger": "toUpperCase", "contents": "toUpperCase($0)" },
        { "trigger": "trim", "contents": "trim($0)" },
        { "trigger": "tryBoolean", "contents": "tryBoolean($0)" },
        { "trigger": "tryDouble", "contents": "tryDouble($0)" },
        { "trigger": "tryLong", "contents": "tryLong($0)" }
    ]
}
