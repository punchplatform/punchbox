#! /bin/bash

RED="\033[31m"
GREEN="\033[32m"
YELLOW="\033[33m"
BLUE="\033[34m"
RESET="\033[0m"

echo -e "${BLUE}INFO:${RESET} Push Elasticsearch templates"
punchplatform-push-es-templates.sh --directory $PUNCHPLATFORM_CONF_DIR/resources/elasticsearch/templates/ --url {{ punch.elasticsearch.cluster_production_transport_address }}:9200

echo -e "${BLUE}INFO:${RESET} Push Kibana dashboards"
punchplatform-setup-kibana.sh --import --url {{ punch.kibana.servers[0] }}:5601

echo -e "${BLUE}INFO:${RESET} Start channels from tenant mytenant"
punchctl -t mytenant start --channel stormshield_networksecurity
punchctl -t mytenant start --channel aggregation
punchctl -t mytenant start --channel elastalert  
punchctl -t mytenant start --channel apache_httpd
punchctl -t mytenant start --channel admin

echo -e "${BLUE}INFO:${RESET} Start channels from tenant mytenant"
punchctl -t validation start 
punchctl -t validation start --channel elastalert_validation

echo -e "${BLUE}INFO:${RESET} Launch log injectors"

{% for server in punch.shiva.servers %}
nohup punchplatform-log-injector.sh -c $PUNCHPLATFORM_CONF_DIR/resources/injectors/mytenant/stormshield_networksecurity_injector.json -H {{ server }} &
{% endfor %}

// Send logs to all servers to match single unknown listening server. No logs actually injected to non-listening servers.
{% for server in punch.storm.slaves %}
nohup punchplatform-log-injector.sh -c $PUNCHPLATFORM_CONF_DIR/resources/injectors/mytenant/apache_httpd_injector.json -H {{ server }} &
{% endfor %}

echo -e "${BLUE}INFO:${RESET} Wait for 15 min, logs are being inserted in platform"
sleep 900
pkill -f org.thales.punch.injector.Main >/dev/null 2>/dev/null

echo -e "${BLUE}INFO:${RESET} Stop channels"
punchctl -t mytenant stop 
punchctl -t validation stop 

echo -e "${BLUE}INFO:${RESET} End of check platform"

exit
