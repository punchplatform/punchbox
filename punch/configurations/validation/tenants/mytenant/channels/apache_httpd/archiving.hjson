{
  version: "6.0"
  type: punchline
  runtime: storm
  dag:
  [
    {
      type: kafka_input
      settings:
      {
        topic: mytenant_apache_httpd_archiving
        start_offset_strategy: last_committed
        fail_action: exit
      }
      publish:
      [
        {
          stream: logs
          fields:
          [
            log
            _ppf_id
            _ppf_timestamp
            _ppf_partition_id
            _ppf_partition_offset
          ]
        }
        {
          stream: _ppf_metrics
          fields: 
          [
            _ppf_latency
          ]
        }
      ]
    }
    {
      type: file_output
      settings:
      {
        destination: file:///tmp/archive-logs/storage
        create_root: true
        topic: httpd
        file_prefix_pattern: %{topic}/%{date}/puncharchive-%{tags}-%{offset}
        batch_size: 1000

        batch_expiration_timeout: 10s
        fields:
        [
          _ppf_id
          _ppf_timestamp
          log
        ]
        encoding: csv
        compression_format: gzip
        separator: __|__
        timestamp_field: _ppf_timestamp
      }
      subscribe:
      [
        {
          component: kafka_input
          stream: logs
        }
        {
          component: kafka_input
          stream: _ppf_metrics
        }
      ]
      publish:
      [
        {
          stream: metadatas
          fields:
          [
            metadata
          ]
        }
        {
          stream: _ppf_metrics
          fields: [
            _ppf_latency
          ]
        }
      ]
    }
    {
      type: elasticsearch_output
      component: metadatas_indexer
      settings: {
        per_stream_settings: [
          {
            stream: metadatas
            index: {
            type: daily
            prefix: mytenant-archive-
            }
            document_json_field: metadata
            batch_size: 1
            reindex_failed_documents: true
            error_index: {
              type: daily
              prefix: mytenant-archive-errors
            }
          }
        ]
      }
      subscribe: [
        {
          component: file_output
          stream: metadatas
        }
        {
          component: file_output
          stream: _ppf_metrics
        }
      ]
    }
  ],
  metrics: {
    reporters: [
      {
        type: kafka
      }
    ]
  }
  settings: {
    topology.worker.childopts: "-server -Xms256m -Xmx256m"
  }
}
