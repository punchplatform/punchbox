{
  "tenant": "{{channel.tenant}}",
  "channel": "{{channel.channel}}",
  "name": "processing",
  "meta": {
    "tenant": "{{channel.tenant}}",
    "channel": "{{channel.channel}}",
    "vendor": "{{channel.vendor}}"
  },
  "spouts": [
    {
      "type": "kafka_spout",
      "spout_settings": {
        "start_offset_strategy": "last_committed",
        "brokers": "common",
        "topic": "{{channel.tenant}}_{{channel.channel}}"
      },
      "storm_settings": {
        "executors": 1,
        "component": "kafka_spout",
        "publish": [
          {
            "stream": "logs",
            "fields": [
              "log",
              "_ppf_local_host",
              "_ppf_local_port",
              "_ppf_remote_host",
              "_ppf_remote_port",
              "_ppf_id",
              "_ppf_timestamp"
            ]
          },
          {
            "stream": "_ppf_metrics",
            "fields": [
              "_ppf_latency"
            ]
          }
        ]
      }
    }
  ],
  "bolts": [
    {
      "type": "punch_bolt",
      "bolt_settings": {
        {% set exists = [] %}
        "punchlet_json_resources" : [{% for punchlet in channel.processing.punchlets %}{% if punchlet.punchlet_json_resources is defined %}{% for resource in punchlet.punchlet_json_resources %}
            {% if exists %},{% endif %}{% if exists.append(1) %}{% endif %}"{{ resource }}"{% endfor %}{% endif %}{% endfor %}
        ],
        "punchlet" : [
        {%- for punchlet in channel.processing.punchlets %}
          "{{ punchlet.punchlet }}"{% if not (loop.index == loop.length) %},{%endif%}
        {%- endfor %}
        ]
      },
      "storm_settings": {
        "executors": 1,
        "component": "punch_bolt",
        "publish": [
          {
            "stream": "logs",
            "fields": [
              "raw_log",
              "log",
              "_ppf_id",
              "_ppf_timestamp",
              "es_index"
            ]
          },
          {
            "stream": "_ppf_errors",
            "fields": [
              "_ppf_error_message",
              "_ppf_error_document",
              "_ppf_id"
            ]
          },
          {
            "stream": "_ppf_metrics",
            "fields": [
              "_ppf_latency"
            ]
          }
        ],
        "subscribe": [
          {
            "component": "kafka_spout",
            "stream": "logs",
            "grouping": "localOrShuffle"
          },
          {
            "component": "kafka_spout",
            "stream": "_ppf_metrics",
            "grouping": "localOrShuffle"
          }
        ]
      }
    },
    {
      "type": "elasticsearch_bolt",
      "bolt_settings": {
        "cluster_id": "{{channel.output.elasticsearch.cluster}}",
        "per_stream_settings": [
          {
            "stream": "logs",
            "index": {
              "type": "daily",
              "prefix": "mytenant-events-"
            },
            "document_json_field": "log",
            "document_id_field": "_ppf_id",
            "additional_document_value_fields": [
              {
                "type": "date",
                "document_field": "@timestamp",
                "format": "iso"
              }
            ]
          },
          {
            "stream": "_ppf_errors",
            "document_value_fields": [
              "_ppf_error_message",
              "_ppf_error_document",
              "_ppf_id"
            ],
            "index": {
              "type": "daily",
              "prefix": "mytenant-events-"
            },
            "document_id_field": "_ppf_id",
            "additional_document_value_fields": [
              {
                "type": "date",
                "document_field": "@timestamp",
                "format": "iso"
              }
            ]
          }
        ]
      },
      "storm_settings": {
        "executors": {{channel.output.elasticsearch.executors}},
        "component": "elasticsearch_bolt",
        "subscribe": [
          {
            "component": "punch_bolt",
            "stream": "logs"
          },
          {
            "component": "punch_bolt",
            "stream": "_ppf_errors"
          },
          {
            "component": "punch_bolt",
            "stream": "_ppf_metrics"
          }
        ]
      }
    }
  ],
  "metrics": {
    "reporters": [
      {
        "type": "elasticsearch",
        "cluster_name": "es_search"
      }
    ]
  },
  "storm_settings": {
    "topology.worker.childopts": "{{channel.runtime_settings.childopts}}"
  }
}