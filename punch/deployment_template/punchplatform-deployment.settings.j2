{% set setups_dir = setups_root | d('/data/opt') %}
{% set data_dir = data_root | d('/data') %}
{
    "platform": {
        "platform_id": "punchplatform-primary",
        "setups_root": "{{ setups_dir }}",
        "remote_data_root_directory": "{{ data_dir }}",
        "remote_logs_root_directory": "/var/log/punchplatform",
        "punchplatform_daemons_user": "punchplatform",
        "punchplatform_group": "punchplatform",
        "binaries_version": "{{ version.binaries }}"
        {% if security is defined %}
        ,
        "platform_local_credentials_dir": "{{security_dir}}/platform_certs",
        "platform_local_common_secrets_filename": "platform_common_secrets.json",
        "platform_ca_name": "ca.pem",
        "platform_truststore_name": "truststore.jks",
        "platform_truststore_password": "@{DEPLOYMENT_SECRETS.platform.platform_truststore_pass}",
        "punch_commands": {
            "security": {
                "kafka_clients": {
                    "local": {
                        "ssl_enabled": true,
                        "ssl_truststore_location": "@{PUNCHPLATFORM_SECRETS_DIR}/truststore.jks",
                        "ssl_truststore_pass": "@{PUNCHPLATFORM_RUNTIME_SECRETS.secret}",
                        "ssl_keystore_location": "@{PUNCHPLATFORM_SECRETS_DIR}/server-keystore.jks",
                        "ssl_keystore_pass": "@{PUNCHPLATFORM_RUNTIME_SECRETS.secret}"
                    }
                },
                "elasticsearch_clients": {
                    "es_search": {
                        "ssl_enabled": true,
                        "ssl_client_certificate_authority": "@{PUNCHPLATFORM_SECRETS_DIR}/ca.pem",
                        "ssl_client_certificate": "@{PUNCHPLATFORM_SECRETS_DIR}/server-cert.pem",
                        "ssl_client_private_key": "@{PUNCHPLATFORM_SECRETS_DIR}/server-key.pem",
                        "credentials": {
                            "username": "@{PUNCHPLATFORM_RUNTIME_SECRETS.es.user}",
                            "password": "@{PUNCHPLATFORM_RUNTIME_SECRETS.es.pass}"
                        }
                    }
                },
                "gateway_clients": {
                    "gateway_32g": {
                        "ssl_enabled": true,
                        "ssl_truststore_location": "@{PUNCHPLATFORM_SECRETS_DIR}/truststore.jks",
                        "ssl_truststore_pass": "@{PUNCHPLATFORM_RUNTIME_SECRETS.secret}",
                        "ssl_keystore_location": "@{PUNCHPLATFORM_SECRETS_DIR}/server-keystore.jks",
                        "ssl_keystore_pass": "@{PUNCHPLATFORM_RUNTIME_SECRETS.secret}"
                    }
                },
                "zookeeper_clients": {
                    "local": {
                        "ssl_enabled": true,
                        "ssl_truststore_location": "@{PUNCHPLATFORM_SECRETS_DIR}/truststore.jks",
                        "ssl_truststore_pass": "@{PUNCHPLATFORM_RUNTIME_SECRETS.secret}",
                        "ssl_keystore_location": "@{PUNCHPLATFORM_SECRETS_DIR}/server-keystore.jks",
                        "ssl_keystore_pass": "@{PUNCHPLATFORM_RUNTIME_SECRETS.secret}"
                    }
                }
            }
        }
    {% endif %}
    }

	{% if reporters is defined %}
	,
    "reporters": {
        "myreporter" : {
            "type": "kafka",
            "brokers": "{{reporters.kafka_cluster}}",
            "topic": "platform-events",
            "reporting_interval": 30,
            "encoding": "json"
            {% if tls | d(false) %}
            ,
            "security.protocol": "SSL",
            "ssl.truststore.location": "@{PUNCHPLATFORM_SECRETS_DIR}/truststore.jks",
            "ssl.truststore.password": "@{PUNCHPLATFORM_RUNTIME_SECRETS.secret}",
            "ssl.keystore.location": "@{PUNCHPLATFORM_SECRETS_DIR}/server-keystore.jks",
            "ssl.keystore.password": "@{PUNCHPLATFORM_RUNTIME_SECRETS.secret}"
            {% endif %}
        }
    }
    {% endif %}

    ,
	"punchplatform_operator" : {
  		"punchplatform_operator_environment_version": "{{ version.operator }}",
  		"configuration_name_dir_from_home" : "pp-conf",
		"operators_username": ["punch-operator", "guest-operator"],
		"servers": {
			"server1": {}
		},
	  	{% if tls | d(false) %}
	  	"users": {
			"punch-operator": {
				"local_credentials_dir": "{{security_dir}}/server1/punch_operator",
				"custom_additional_credentials_files": [
					"server.p8",
					"server.crt",
					"server-keystore.jks"
				]
			},
		  	"guest-operator": {
				"local_credentials_dir": "{{security_dir}}/server1/guest_operator"
		  	}
		},
		{% endif %}
		"custom_secrets_file": "operator_secrets.json",
		"storage": {
			"type": "kafka",
			"kafka_cluster": "kafka_front"
		},
		"reporters": [
	  		"central_back_reporter"
		]
	}

	{% if zookeeper is defined %}
	,
	"zookeeper": {
        "zookeeper_version": "{{ version.zookeeper }}",
        "zookeeper_nodes_production_interface": "{{ iface }}",
        "zookeeper_childopts": "-server -Xms128m -Xmx{{ zookeeper.max_memory | d('512m') }}",
	    "clusters": {
            {% for cluster_name,cluster_section in zookeeper.clusters.items() %}
            "{{cluster_name}}":{
                "hosts": {{ cluster_section.servers | tojson }},
                "cluster_port": 2181,
                "punchplatform_root_node": "/punchplatform-primary"
                {% if tls | d(false) %}
                ,
                "ssl_enabled": true,
                "keystore_name": "server-keystore.jks",
                "keystore_password": "@{DEPLOYMENT_SECRETS.zookeeper.keystore_pass}"
                {% endif %}
            }{% if not loop.last %},{% endif %}
	        {% endfor %}
	    }
	}
    {% endif %}

    {% if kafka is defined %}
    ,
    "kafka" : {
        "kafka_version" : "{{ version.kafka }}",
        "kafka_brokers_production_interface" : "{{ iface }}",
        "clusters" : {
            {% for cluster_name, cluster_section in kafka.clusters.items() %}
            "{{cluster_name}}": {
                "brokers_with_ids" : [
                    {%- for server in cluster_section.servers %}
                    {
                        "id" : {{ loop.index }},
                        "broker" : "{{server}}"
                    }{% if not loop.last %},{% endif %}
                    {%- endfor %}
                ],
                "zk_cluster" : "{{cluster_section.zk_cluster}}",
                "zk_root" : "{{cluster_name}}",
                "brokers_config" : "punchplatform-local-server.properties",
                "kafka_brokers_jvm_xmx": "{{ cluster_section.max_memory | d('512M') }}"
                {%- if tls | d(false) %}
                ,
                "ssl_enabled": true,
                "keystore_name": "server-keystore.jks",
                "keystore_password": "@{DEPLOYMENT_SECRETS.kafka.keystore_pass}"
                {% endif %}
            }{% if not loop.last %},{% endif %}
            {% endfor %}
        }
    }
    {% endif %}

    {% if elasticsearch is defined %}
    ,
    "elasticsearch" : {
        "elasticsearch_version" : "{{ version.elastic }}",
        "clusters" : {
            {% for cluster_name,cluster_section in elasticsearch.clusters.items() %}
            "{{cluster_name}}": {
                "nodes": {
                    {% for server in cluster_section.servers %}
                    "{{server}}":{
                        "http_api_address" : "{{ server }}",
                        "transport_address" : "{{ server }}",
                        "bind_address" : "_{{ iface }}_",
                        "rack_id" : "{{ loop.index }}"
                    }{% if not loop.last %},{% endif %}
                    {% endfor %}
                },
                "http_api_port" : 9200,
                "transport_port" : 9300,
                "minimum_master_nodes": {{ cluster_section.servers|length }},
                "settings_by_type" : {
                    "data_node": {
                        "max_memory": "{{ elasticsearch.max_memory | d('512M') }}",
                        "modsecurity_enabled": false,
                        "modsecurity_blocking_requests": false,
                        "script_execution_authorized": true,
                        "http_cors_enabled" : true,
                        "readonly" : true
                    }
                }
                {% if security is defined %}
                ,
                "plugins":{
                    "opendistro_security": {
                        "opendistro_security_version": "{{ version.opendistro_security }}",
                        "ssl_http_enabled": true,
                        "ssl_http_clientauth_mode": "REQUIRE",
                        "admin_pemkey_name": "admin-server-key.pem",
                        "admin_pemcert_name": "admin-server-cert.pem",
                        "ssl_pemkey_name": "server-key.pem",
                        "ssl_pemcert_name": "server-cert.pem",
                        "authcz_admin_dn": [
                          "emailAddress=admin-server2-super-1@easyssl.com,CN=server2,OU=AC,O=EasySslCorp,L=Paris,ST=IdF,C=FR",
                          "emailAddress=admin-server3-super-1@easyssl.com,CN=server3,OU=AC,O=EasySslCorp,L=Paris,ST=IdF,C=FR"
                        ],
                        "nodes_dn": [
                          "emailAddress=server2-super-1@easyssl.com,CN=server2,OU=AC,O=EasySslCorp,L=Paris,ST=IdF,C=FR",
                          "emailAddress=server3-super-1@easyssl.com,CN=server3,OU=AC,O=EasySslCorp,L=Paris,ST=IdF,C=FR"
                        ],
                        "kibana_index": ".kibana-admin"
                    }
                }
                {% endif %}
            }{% if not loop.last %},{% endif %}
            {% endfor %}
        }
    }
    {% endif %}

    {% if gateway is defined %}
    ,
    "gateway": {
        "gateway_version": "{{ version.gateway }}",
        "clusters": {
            {% for cluster_name,cluster_section in gateway.clusters.items() %}
            "{{cluster_name}}": {
                {% set tenant = cluster_section.tenant | d(cluster_name) %}
                "tenant": "{{tenant}}",
                {% if security is defined %}
                "ssl_enabled": true,
                "custom_secrets_file": "gateway_user_secrets.json",
                "key_store_name": "server-keystore.jks",
                "key_store_password" : "@{DEPLOYMENT_SECRETS.gateway.keystore_pass}",
                "client_private_key_name": "server-key.pem",
                "client_certificate_name": "server-cert.pem",
                {% endif %}
                "servers":{
                    {% for server in cluster_section.servers %}
                    "{{ server }}": {
                       "inet_address": "{{ server }}",
                       "port": 4242
                    }{% if not loop.last %},{% endif %}
                    {% endfor %}
                },
                "elasticsearch": {
                    "data_cluster": {
                        "cluster_id": "{{cluster_section.es_data_cluster}}",
                        {% set server_ip = [] %}
                        {% for server in elasticsearch.clusters.get(cluster_section.es_data_cluster).servers  %}
                        {% set server_ip = server_ip.append( server+":9200" ) %}
                        {% endfor %}
                        "hosts" : {{ server_ip | tojson }},
                        "settings": ["es.index.read.missing.as.empty: yes", "es.nodes.discovery: true"]
                        {% if tls | d(false) %}
                        ,
                        "metrics_credentials": {
                           "user": "@{DEPLOYMENT_SECRETS.user}",
                           "password" : "@{DEPLOYMENT_SECRETS.password}"
					 	}
						{% endif %}
                    },
                    "metric_cluster": {
                        "cluster_id": "{{cluster_section.es_metric_cluster}}",
                        {% set server_ip = [] %}
                        {% for server in elasticsearch.clusters.get(cluster_section.es_metric_cluster).servers  %}
                        {% set server_ip = server_ip.append( server+":9200" ) %}
                        {% endfor %}
                        "hosts": {{ server_ip | tojson }},
                        "index_name": "{{tenant}}-gateway-logs",
                        "settings": ["es.index.read.missing.as.empty: yes", "es.nodes.discovery: true"]
                        {% if security is defined %}
                        ,
                        "credentials": {
                            "user": "@{DEPLOYMENT_SECRETS.user}",
                            "password" : "@{DEPLOYMENT_SECRETS.password}"
                        }
                        {% endif %}
                    }
                },
                "services": {
                    "extraction": {
                        "formats": ["csv", "json"]
                    }
                },
                "resources": {
                    "doc_dir": "{{ setups_dir }}/punchplatform-documentation-{{version.gateway}}/{{tenant}}/doc/html",
                    "punchlines_dir": "punchlines/{{tenant}}",
                    "archives_dir": "{{ data_dir }}/archives/{{tenant}}",
                    "manager": {
                        "metadata": [
                            {
                                "type": "elasticsearch",
                                {% set server_ip = [] %}
                                {% for server in elasticsearch.clusters.get(cluster_section.es_metric_cluster).servers  %}
                                {% set server_ip = server_ip.append( server+":9200" ) %}
                                {% endfor %}
                                "hosts": {{ server_ip | tojson }},
                                "index": "{{tenant}}-resources-metadata"
                                {% if security is defined %}
                                ,
                                "credentials": {
                                    "user": "@{DEPLOYMENT_SECRETS.user}",
                                    "password" : "@{DEPLOYMENT_SECRETS.password}"
                                }
                                {% endif %}
                            }
                        ],
                        "data": [
                            {
                                "type": "file",
                                "root_path": "{{ data_dir }}/resources/{{tenant}}"
                            }
                        ]
                    }
               },
               "reporters": ["myreporter"]
            }{% if not loop.last %},{% endif %}
            {% endfor %}
        }
    }
    {% endif %}

    {% if kibana is defined %}
    ,
    "kibana" : {
        {% set all_servers = [] %}
        "kibana_version" : "{{ version.elastic }}",
        "domains" : {
            {% for domain_name,domain_section in kibana.domains.items() %}
            "{{domain_name}}": {
                "es_cluster_target": "{{domain_section.es_cluster}}",
                "es_type_of_nodes_targeted": "data_node",
                {% if all_servers.append(domain_section.server) %}{% endif %}
                "servers": ["{{domain_section.server}}"],
                "kibana_port" : 5601,
                "type" : "administration"
                {% if tsl | d(false) %}
                ,
                "server_ssl_enabled": true,
                "server_ssl_key_name": "server-key.pem",
                "server_ssl_certificate_name": "server-cert.pem",
                "elasticsearch_ssl_enabled": true,
                "elasticsearch_ssl_verificationMode": "full",
                "elasticsearch_ssl_certificateAuthorities_names": ["ca.pem"]
                {% endif %}
                {% if domain_section.plugin_gateway_cluster is defined %}
                {% set server_ip = [] %}
                {% if tls | d(false) %}{% set scheme = "https" %}{% else %}{% set scheme = "http" %}{% endif %}
                {% for server in gateway.clusters.get(domain_section.plugin_gateway).servers  %}
                {% set server_ip = server_ip.append( scheme + "://"+server+":4242" ) %}
                {% endfor %}
                ,
                "plugins":{
                    "punchplatform": {
                        "rest_api": {
                            "hosts": {{ server_ip | tojson }}
                            {% if security is defined %}
                            ,
                            "ssl_enabled": true
                            {% endif %}
                        }
                    }
                }
                {% endif %}
            }{% if not loop.last %},{% endif %}
            {% endfor %}
        },
        "plugins":{
            "punchplatform_feedback": {
                "punchplatform_feedback_version": "{{ version.punch }}"
            }
            {% if security is defined %}
            ,
            "opendistro_security": {
                "opendistro_security_version": "{{ version.opendistro_security }}"
            }
            {% endif %}
        },
        {% set sorted_servers = all_servers | sort | unique | list %}
        "servers": {
            {% for server in sorted_servers %}
            "{{server}}":{
                "address": "{{server}}"
            }{% if not loop.last %},{% endif %}
            {% endfor %}
        }
    }
    {% endif %}

    {% if shiva is defined %}
    ,
    "shiva": {
        "shiva_version": "{{ version.shiva }}",
        "clusters": {
            {% for cluster_name,cluster_section in shiva.clusters.items() %}
            "{{cluster_name}}": {
                "reporters" : ["myreporter"],
                "storage": {
                  "type" : "kafka",
                  "kafka_cluster": "{{cluster_section.kafka_cluster}}"
                },
                {% if tls | d(false) %}
                "ssl_enabled": true,
                "keystore_name": "server-keystore.jks",
                "keystore_password": "@{DEPLOYMENT_SECRETS.shiva.keystore_pass}",
                "custom_additional_credentials_files": ["server-keystore.jks", "truststore.jks", "server-key.pem", "server-cert.pem", "ca.pem"],
                "custom_secrets_file": "shiva_secrets.json",
                {% endif %}
                "servers": {
                    {% for server in cluster_section.servers %}
                    "{{ server }}": {
                        "runner": true,
                        "can_be_master": true,
                        "tags": [ "{{cluster_name}}", "{{server}}" ]
                    }{% if not loop.last %},{% endif %}
                {% endfor %}
                }
            }{% if not loop.last %},{% endif %}
            {% endfor %}
        }
    }
    {% endif %}

    {% if storm is defined or (not tls | d(false) ) %}
    ,
    "storm" : {
        "storm_version" : "{{ version.storm }}",
        "storm_nimbus_nodes_production_interface" : "{{ iface }}",
        "clusters" : {
            {% for cluster_name,cluster_section in storm.clusters.items() %}
            "{{cluster_name}}": {
                "master" : {
                  "servers" : {{ cluster_section.master_servers | tojson }}
                },
                "ui" : {
                  "servers" : {{ cluster_section.ui_servers | d(cluster_section.master_servers) | tojson }}
                },
                "slaves" : {{ cluster_section.slave_servers| d(cluster_section.master_servers) | tojson }},
                "zk_cluster" : "{{cluster_section.zk_cluster}}",
                "zk_root" : "{{cluster_name}}",
                "storm_workers_by_punchplatform_supervisor" : 10,
                "workers_childopts" : "-Xmx{{ storm.max_memory | d('128m') }}",
                "supervisor_memory_mb" : 256,
                "supervisor_cpu" : 2
            }{% if not loop.last %},{% endif %}
            {% endfor %}
        }
    }
    {% endif %}

    {% if spark is defined %}
    ,
    "spark" : {
        "spark_version" : "{{ version.spark }}",
        "punchplatform_analytics_deployment_version": "{{ version["analytics-deployment"] }}",
        "clusters" : {
            {% for cluster_name,cluster_section in spark.clusters.items() %}
            "{{cluster_name}}": {
                "master" : {
                    "servers" : {{ cluster_section.master_servers | tojson }},
                    "listen_interface" : "{{ iface }}",
                    "master_port" : 7077,
                    "rest_port": 6066,
                    "ui_port" : 8081
                },
                "slaves" : {
                    {% for server in cluster_section.slave_servers %}
                    "{{ server }}" : {
                    "listen_interface" : "{{ iface }}",
                    "slave_port" : 7078,
                    "webui_port" : 8084
                    }{% if not loop.last %},{% endif %}
                    {% endfor %}
                },
                "spark_workers_by_punchplatform_spark": 1,
                "zk_cluster" : "{{cluster_section.zk_cluster}}",
                "zk_root" : "{{cluster_name}}",
                "slaves_cpu" : 2,
                "slaves_memory" : "{{ spark.max_memory | d('512M') }}"
            }{% if not loop.last %},{% endif %}
            {% endfor %}
        }
    }
   {% endif %}

    {% if minio is defined %}
    ,
    "minio": {
        "minio_version": "{{ version.minio }}",
        "minio_access_key": "admin",
        "minio_secret_key": "punchplatform",
        "clusters": {
            {% for cluster_name,cluster_section in minio.clusters.items() %}
            "{{cluster_name}}": {
              "hosts": {{ cluster_section.servers | tojson }},
              "port": "9000"
            }{% if not loop.last %},{% endif %}
            {% endfor %}
        }
    }
    {% endif %}

    {% if clickhouse is defined %}
    ,
    "clickhouse": {
        "clickhouse_version": "{{ version.clickhouse }}",
        "clusters": {
            {% for cluster_name,cluster_section in clickhouse.clusters.items() %}
            "common": {
                "shards": [
                  {
                    "servers": {{ cluster_section.servers | tojson }}
                  }
                ],
                "zk_cluster": "{{cluster_section.zk_cluster}}",
                "zk_root": "{{cluster_name}}",
                "http_port": 8123,
                "tcp_port": 9100
            }{% if not loop.last %},{% endif %}
            {% endfor %}
        }
    }
    {% endif %}


	{% if metricbeat is defined %}
	,
    "metricbeat" : {
        "metricbeat_version" : "{{ version.metricbeat }}",
        "modules" : {
            "system" : {
                "high_frequency_system_metrics": {
                    "metricsets" : ["cpu","load","memory"],
                    "reporting_interval" : "30s"
                },
                "normal_frequency_system_metrics": {
                    "metricsets" : ["fsstat"],
                    "reporting_interval" : "5m"
                },
                "slow_frequency_system_metrics": {
                    "metricsets" : ["uptime"],
                    "reporting_interval" : "1h"
                }
            }
        },
        "elasticsearch" : {
          "cluster_id" : "{{metricbeat.es_cluster}}"
          {% if tls | d(false) %}
          ,
          "ssl_enabled": true
          {% endif %}
        }
        {% if tls | d(false) %}
        ,
        "elasticsearch_private_key_name": "server-key.pem",
        "elasticsearch_certificate_name": "server-cert.pem",
        "elasticsearch_user": "admin",
        "elasticsearch_password": "admin"
        {% endif %}
    }
    {% endif %}
}