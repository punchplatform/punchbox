{ 

   {% if punch.elasticsearch is defined %}
   // All ES input/output nodes (Storm nodes)
   elasticsearch_nodes:{
      selection:{
         tenant:*
         channel:*
         runtime:*
      }
      match:$.dag[?(@.type=='elasticsearch_input' || @.type=='elasticsearch_output')].settings
      additional_values:{
         http_hosts:[
            {
               host:{{ punch.elasticsearch.cluster_production_transport_address }}
               port:9200
            }
         ]
         {% if security %}
         credentials: {
            user: admin
            password: admin
         }
         ssl: true
         ssl_keystore_pass: @{PUNCHPLATFORM_RUNTIME_SECRETS.secret}
         ssl_keystore_location: file://{{punch.installation_directory}}/{{versions.binaries}}/{{versions.storm}}/conf/punchline-keystore.jks
         ssl_truststore_location: file://{{punch.installation_directory}}/{{versions.binaries}}/{{versions.storm}}/conf/punch-truststore.jks
         ssl_truststore_pass: @{PUNCHPLATFORM_RUNTIME_SECRETS.secret}
         {% endif %}
      }
   }

   // All ES spark nodes 
   elastic_nodes:{ 
      selection:{ 
         tenant:*
         channel:*
         runtime:*
      }
      match:$.dag[?(@.type=='elastic_batch_input' || @.type=='elastic_batch_output' || @.type=='elastic_stream_output' || @.type=='elastic_input' || @.type=='elastic_query_stats' || @.type=='python_elastic_input' || @.type=='python_elastic_output')].settings
      additional_values:{ 
         nodes:[ 
            {{ punch.elasticsearch.servers[0] }}
         ]
         {% if security %}
         elastic_settings:{
            es.net.http.auth.user: admin
            es.net.http.auth.pass: admin
            es.net.ssl: false
            es.net.ssl.keystore.pass: @{PUNCHPLATFORM_RUNTIME_SECRETS.secret}
            es.net.ssl.keystore.location: file://{{punch.installation_directory}}/{{versions.binaries}}/{{versions.spark}}/conf/punchline-keystore.jks
            es.net.ssl.truststore.location: file://{{punch.installation_directory}}/{{versions.binaries}}/{{versions.spark}}/conf/punch-truststore.jks
            es.net.ssl.truststore.pass: @{PUNCHPLATFORM_RUNTIME_SECRETS.secret}
         }
         {% endif %}
      }
   }
   {% endif %}


   {% if punch.kafka is defined %}
   // All Kafka input/output nodes (Storm nodes)
   kafka_input:{ 
      selection:{ 
         tenant:*
         channel:*
         runtime:*
      }
      match:$.dag[?(@.type=='kafka_input' || @.type=='kafka_output')].settings
      additional_values:{ 
         brokers: local
         bootstrap.servers:{{ punch.kafka.brokers[0] }}
         metric_cluster_id:local
      }
   }
   {% endif %}

   {% if punch.kafka is defined %}
   // All Kafka reporters
   kafka_reporter:{ 
      selection:{ 
         tenant:*
         channel:*
         runtime:*
      }
      match:$.metrics.reporters[?(@.type=='kafka')]
      additional_values:{ 
         brokers: local
         bootstrap.servers:{{ punch.kafka.brokers[0] }}
         topic: platform-events
         reporting_interval: 30
         encoding: json
      }
   }
   {% endif %}

   {% if punch.elasticsearch is defined %}

   // All Elasticsearch metrics reporters
   es_metrics_reporter:{ 
      selection:{ 
         tenant:*
         channel:*
         runtime:*
      }
      match:$.metrics.reporters[?(@.type=='elasticsearch')]
      additional_values:{ 
         cluster_name: es_search
         metric_document_field_name: log
         reporting_interval: 30
         http_hosts:[ 
            { 
               host:{{ punch.elasticsearch.servers[0] }}
               port:9200
            }
         ]
         {% if security %}
         credentials: {
            user: admin
            password: admin
         }
         ssl: true
         ssl_trusted_certificate: "{{installation_directory}}/certificates/punch-ca.pem"
         {% endif %}
      }
   }


   // All plan persistence
   persistence_plan_resolver:{ 
      selection:{ 
         tenant:*
         channel:*
         runtime:*
      }
      match:$.settings.persistence[?(@.type=='elasticsearch')]
      additional_values:{ 
         nodes:[ 
           	{
               host:{{ punch.elasticsearch.servers[0] }}
               port:9200
        	   } 
         ]
         {% if security %}
         credentials: {
            user: admin
            password: admin
         }
         ssl: true
         ssl_keystore_pass: @{PUNCHPLATFORM_RUNTIME_SECRETS.secret}
         ssl_keystore_location: file://{{punch.installation_directory}}/{{versions.binaries}}/{{versions.spark}}/conf/punchline-keystore.jks
         ssl_truststore_location: file://{{punch.installation_directory}}/{{versions.binaries}}/{{versions.spark}}/conf/punch-truststore.jks
         ssl_truststore_pass: @{PUNCHPLATFORM_RUNTIME_SECRETS.secret}
         {% endif %}
      }
   }
   // Archive houeskeeping
   archive_housekeeping:{ 
      selection:{ 
         tenant:*
         channel:*
         runtime:*
      }
      match:$.archiving_pools[*]
      additional_values:{ 
         es_cluster_id: es_search
         {% if security %}
         credentials: {
            user: admin
            password: admin
         }
         ssl: true
         ssl_keystore_pass: @{PUNCHPLATFORM_RUNTIME_SECRETS.secret}
         ssl_keystore_location: file://{{punch.installation_directory}}/{{versions.binaries}}/{{versions.storm}}/conf/punchline-keystore.jks
         ssl_truststore_location: file://{{punch.installation_directory}}/{{versions.binaries}}/{{versions.storm}}/conf/punch-truststore.jks
         ssl_truststore_pass: @{PUNCHPLATFORM_RUNTIME_SECRETS.secret}
         {% endif %}
      }
   }
   // Channel monitoring 
   channel_monitoring:{ 
      selection:{ 
         tenant:*
         channel: monitoring
         runtime:*
      }
      match: .elasticsearch
      additional_values:{ 
         es_cluster_id: es_search
         {% if security %}
         credentials: {
            user: admin
            password: admin
         }
         ssl: true
         ssl_keystore_pass: @{PUNCHPLATFORM_RUNTIME_SECRETS.secret}
         ssl_keystore_location: file://{{punch.installation_directory}}/{{versions.binaries}}/{{versions.storm}}/conf/punchline-keystore.jks
         ssl_truststore_location: file://{{punch.installation_directory}}/{{versions.binaries}}/{{versions.storm}}/conf/punch-truststore.jks
         ssl_truststore_pass: @{PUNCHPLATFORM_RUNTIME_SECRETS.secret}
         {% endif %}
      }
   }
   // Channel monitoring reporters 
   channel_monitoring_kafka_reporters:{ 
      selection:{ 
         tenant:*
         channel: monitoring
         runtime:*
      }
      match:$.reporters[?(@.type=='kafka')]
      additional_values:{ 
       brokers: local
       bootstrap.servers:{{ punch.kafka.brokers[0] }}

       topic: platform-events
       reporting_interval: 30
       encoding: json
      }
   }

    channel_monitoring_es_reporters:{ 
      selection:{ 
         tenant:*
         channel: monitoring
         runtime:*
      }
      match:$.reporters[?(@.type=='elasticsearch')]
      additional_values:{ 
         cluster_name: es_search

        reporting_interval: 30
         http_hosts:[ 
            { 
               host:{{ punch.elasticsearch.servers[0] }}
               port:9200
            }
         ]
         {% if security %}
         credentials: {
            user: admin
            password: admin
         }
         ssl: true
         ssl_keystore_pass: @{PUNCHPLATFORM_RUNTIME_SECRETS.secret}
         ssl_keystore_location: file://{{punch.installation_directory}}/{{versions.binaries}}/{{versions.storm}}/conf/punchline-keystore.jks
         ssl_truststore_location: file://{{punch.installation_directory}}/{{versions.binaries}}/{{versions.storm}}/conf/punch-truststore.jks
         ssl_truststore_pass: @{PUNCHPLATFORM_RUNTIME_SECRETS.secret}
         {% endif %}
      }
   }
  
   {% endif %}
}