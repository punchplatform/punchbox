#! /bin/bash

RED="\033[31m"
GREEN="\033[32m"
YELLOW="\033[33m"
BLUE="\033[34m"
RESET="\033[0m"

echo -e "${BLUE}INFO:${RESET} Push Elasticsearch templates"
{% if security %}
punchplatform-push-es-templates.sh --directory $PUNCHPLATFORM_CONF_DIR/resources/elasticsearch/templates/ --url {{ punch.elasticsearch.servers[0] }}:9200 --username admin --password admin
{% else %}
punchplatform-push-es-templates.sh --directory $PUNCHPLATFORM_CONF_DIR/resources/elasticsearch/templates/ --url {{ punch.elasticsearch.servers[0] }}:9200
{% endif %}

echo -e "${BLUE}INFO:${RESET} Push Kibana dashboards"
{% if security %}
punchplatform-setup-kibana.sh --import --url {{ punch.kibana.servers[0] }}:5601 -u admin:admin
{% else %}
punchplatform-setup-kibana.sh --import --url {{ punch.kibana.servers[0] }}:5601
{% endif %}

echo -e "${BLUE}INFO:${RESET} Start channels from tenant mytenant"
punchctl -t mytenant start --channel stormshield_networksecurity
punchctl -t mytenant start --channel aggregation
punchctl -t mytenant start --channel apache_httpd
punchctl -t mytenant start --channel monitoring
punchctl -t mytenant start --channel housekeeping

echo -e "${BLUE}INFO:${RESET} Start channels from tenant mytenant"
punchctl -t validation start
punchctl -t validation start --channel elastalert_validation

echo -e "${BLUE}INFO:${RESET} Start channels from tenant platform"
punchctl -t platform start --channel monitoring
punchctl -t platform start --channel housekeeping

echo -e "${BLUE}INFO:${RESET} Launch log injectors"

{% for server in punch.shiva.servers %}
nohup punchplatform-log-injector.sh -c $PUNCHPLATFORM_CONF_DIR/resources/injectors/mytenant/stormshield_networksecurity_injector.json -H {{ server }} &
{% endfor %}

# Send logs to all servers to match single unknown listening server. No logs actually injected to non-listening servers.
{% for server in punch.storm.slaves %}
nohup punchplatform-log-injector.sh -c $PUNCHPLATFORM_CONF_DIR/resources/injectors/mytenant/apache_httpd_injector.json -H {{ server }} &
{% endfor %}

echo -e "${BLUE}INFO:${RESET} Start gateway tests"
{%- if os == "ubuntu/bionic64" %}
curl -sL https://deb.nodesource.com/setup_lts.x | sudo -E bash - >> /dev/null 2>&1
sudo apt-get install -y nodejs >> /dev/null 2>&1
{% elif os == "centos/7" %}
curl -sL https://rpm.nodesource.com/setup_lts.x | sudo bash - >> /dev/null 2>&1
sudo yum install -y nodejs >> /dev/null 2>&1
{% endif %}
sudo npm install -g newman newman-reporter-json-udp >> /dev/null 2>&1

UDP_IP=$(ping {{ punch.shiva.servers[0] }} -c 1 -q 2>&1 | grep -Po "(\d{1,3}\.){3}\d{1,3}")
newman run $PUNCHPLATFORM_CONF_DIR/tenants/validation/channels/gateway_validation/postman/collection.json \
-e $PUNCHPLATFORM_CONF_DIR/tenants/validation/channels/gateway_validation/postman/env.json \
--working-dir $PUNCHPLATFORM_CONF_DIR/tenants/validation/channels/gateway_validation/postman \
-r json-udp --reporter-json-udp-ip $UDP_IP --reporter-json-udp-port 9999 >> /dev/null 2>&1

echo -e "${BLUE}INFO:${RESET} Wait for 15 min, logs are being inserted in platform"
sleep 900
pkill -f org.thales.punch.injector.Main >/dev/null 2>/dev/null

echo -e "${BLUE}INFO:${RESET} Stop channels"
punchctl -t mytenant stop
punchctl -t validation stop

echo -e "${BLUE}INFO:${RESET} End of check platform"

exit
