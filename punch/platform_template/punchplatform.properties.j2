{
  "platform": {
    "platform_id": "punchplatform-primary",
    "reporters" : [
      {
        "type": "elasticsearch",
        "cluster_name": "es_search",
        "index_prefix": "platform-logs"
        {% if security.elasticsearch is defined and security.elasticsearch == True %}
        ,
        "credentials": {
            "user": "admin",
            "password": "admin"
        }
        {% endif %}
      }
    ]
  },


  {% if zookeeper is defined %}
  "zookeeper": {
    "clusters": {
      "common": {
        "hosts": {{ zookeeper.servers | tojson }},
        "cluster_port": 2181,
        "punchplatform_root_node": "/punchplatform-primary"
      }
    },
    "install_dir": "{{ installation_directory }}/{{ version.zookeeper }}"
  },
  {% endif %}



  {% if elasticsearch is defined %}
  "elasticsearch" : {
    "clusters" : {
      "es_search" : {
        "nodes" : {
          {% for server in elasticsearch.servers %}
          "{{ server }}" : {
            "http_api_address" : "{{ server }}",
            "transport_address" : "{{ server }}",
            "bind_address" : "_{{ iface }}_",
            "rack_id" : "{{ loop.index }}"
          }
          {% if not loop.last %}
          ,
          {% endif %} 
          {% endfor %}
        },
        "http_api_port" : 9200,
        "cluster_production_transport_address" : "{{ elasticsearch.cluster_production_transport_address }}",
        "transport_port" : 9300,
        "minimum_master_nodes": {{ elasticsearch.servers|length }},
        "settings_by_type" : {
          "data_node": {
            "max_memory": "{{ elasticsearch.memory }}",
            "modsecurity_enabled": false,
            "modsecurity_blocking_requests": false,
            "script_execution_authorized": true,
            "http_cors_enabled" : true,
            "readonly" : true
          }
        }
        {% if security.elasticsearch is defined and security.elasticsearch == True %}
        ,
        "plugins":{
          "opendistro_security": {
            "local_ssl_certs_dir": "{{security.local_es_certs}}",
            "admin_pemkey_name": "admin-key.pem",
            "admin_pemcert_name": "admin-cert.pem",
            "admin_pemtrustedcas_name": "cachain.pem",
            "ssl_transport_pemkey_name": "node-key.pem",
            "ssl_transport_pemcert_name": "node-cert.pem",
            "ssl_transport_pemtrustedcas_name": "cachain.pem",
            "ssl_http_enabled": false,
            "ssl_http_pemkey_name": "server2-key.pem",
            "ssl_http_pemcert_name": "server2-cert.pem",
            "ssl_http_pemtrustedcas_name": "server2-cachain.pem",
            "authcz_admin_dn": ["emailAddress=nodesuper1@thales.com,CN=nodesuper1,OU=ts,O=thales,L=paris,ST=idf,C=fr"],
            "nodes_dn": ["emailAddress=nodesuper2@thales.com,CN=nodesuper2,OU=ts,O=thales,L=paris,ST=idf,C=fr"],
            "kibana_index": ".kibana-admin"
          }
        }
        {% endif %}
      }
    }
  },
  {% endif %}

  {% if kibana is defined %}
  "kibana" : {
    "domains" : {
      "admin" : {
        "es_cluster_target": "es_search",
        "es_type_of_nodes_targeted": "data_node",
        "kibana_port" : 5601,
        "type" : "administration"
        {% if security.kibana is defined and security.kibana == True %}
        ,
        "server_ssl_enabled": false,
        "local_ssl_certs_dir": "{{security.local_kibana_certs}}",
        "server_ssl_key_name": "kibana-server-key.pem",
        "server_ssl_certificate_name": "kibana-server-cert.pem",
        "elasticsearch_ssl_enabled": false,
        "elasticsearch_ssl_verificationMode": "none",
        "elasticsearch_ssl_certificateAuthorities_names": ["cachain.pem"]
        {% endif %}
      }
    },
    "servers" : {
    {% for server in kibana.servers %}
      "{{ server }}" : {
        "address" : "{{ server }}"
      }
      {% if not loop.last %}
      ,
      {% endif %} 
    {% endfor %}
    },
    "plugins":{
      {% if gateway is defined %}
      {% set server_ip = [] %}
      {% set port = "4242" %}
      {% for server in gateway.servers  %}
      {% set server_ip = server_ip.append( "http://"+server+":"+port ) %}
      {% endfor %}
      "punchplatform": {
        "rest_api": {
          "hosts": {{ server_ip | tojson }}
        }
      }
      {% endif %}
    }
  },
  {% endif %} 



  {% if gateway is defined %}
  {% set server_ip = [] %}
  {% set port = "9200" %}
  {% for server in elasticsearch.servers  %}
  {% set server_ip = server_ip.append( server+":"+port ) %}
  {% endfor %}

  "gateway": {
    "clusters": {
      "gateway_32g": {
        "tenant": "mytenant",
        "modsecurity_enabled": false,
        "servers": {
        {% for server in gateway.servers %}
          "{{ server }}": {
            "inet_address": "{{ gateway.inet_address }}",
            "port": 4242
            {% if security.gateway is defined and security.gateway == True %}
            ,
            "ssl": {
              "enabled": false,
              "local_key_store_path": "{{security.local_gateway_keystore}}",
              "key_store_type": "jks",
              "key_store_password": "gateway",
              "key_alias": "gateway",
              "key_password": "gateway"
            }
            {% endif %}
          }
        {% if not loop.last %}
          ,
        {% endif %}
      {% endfor %}
        },
        "elasticsearch": {
          "data_cluster": {
            "cluster_id": "es_search",

            "hosts" : {{ server_ip | tojson }},
            "settings": ["es.index.read.missing.as.empty: yes", "es.nodes.discovery: true"]
            {% if security.gateway is defined and security.gateway == True %}
            ,
            "ssl_enabled": false
            {% endif %}

          },
          "metric_cluster": {
            "cluster_id": "es_search",
            "hosts": {{ server_ip | tojson }},
            "index_name": "gateway-logs",
            "settings": ["es.index.read.missing.as.empty: yes", "es.nodes.discovery: true"]
            {% if security.gateway is defined and security.gateway == True %}
            ,
            "ssl_enabled": false
            {% endif %}
          }
        },
        "services": {
          "extraction": {
            "formats": ["csv", "json"]
          },
          "registry": {
            "type": "file",
            "settings": {
              "root_path": "/home/{{ operator.username }}/pp-conf/tenants",
              "create_root": true
            }
          }
        },
        "resources": {
          "resources_dir": "/home/{{ operator.username }}/pp-conf/resources",
          "doc_dir": "{{ installation_directory }}/punchplatform-docuementation-{{version.gateway}}/doc/html",
          "tmp_dir": "/tmp",
          "archives_dir": "/tmp"
        },
        "reporters": [
          {
            "type": "elasticsearch",
            "cluster_name": "es_search"
            {% if security.gateway is defined and security.gateway == True %}
            ,
            "credentials": {
              "user": "admin",
              "password": "admin"
            },
            "ssl_enabled": false
            {% endif %}

          }
        ]
      }
    }
  },
  {% endif %} 

  {% if storm is defined %}
  "storm" : {
    "clusters" : {
      "main": {
        "master" : {
          "servers" : {{ storm.master.servers | tojson }},
          "cluster_production_address" : "{{ storm.master.cluster_production_address }}"
        },
        "ui" : {
          "servers" : {{ storm.ui.servers | tojson }},
          "cluster_admin_url": "{{ storm.ui.cluster_admin_url }}:8080"
        },
        "slaves" : {{ storm.slaves | tojson }},
        "zk_cluster" : "common",
        "zk_root" : "storm-1.2.2-main",
        "storm_workers_by_punchplatform_supervisor" : 10,
        "workers_childopts" : "{{ storm.workers_childopts }}",
        "supervisor_memory_mb" : {{ storm.supervisor_memory_mb }},
        "supervisor_cpu" : 2
      }
    },
    "install_dir": "{{ installation_directory }}/{{ version.storm }}"
  },
  {% endif %} 

  {% if kafka is defined %}
  "kafka" : {
    "clusters" : {
      "local" : {
        "brokers" : {{ kafka.brokers | tojson }},
        "zk_cluster" : "common",
        "zk_root" : "kafka-local",
        "brokers_config" : "punchplatform-local-server.properties",
        "default_replication_factor" : 1,
        "default_partitions" : 2,
        "partition_retention_bytes" : 1073741824,
        "partition_retention_hours" : 24,
        "kafka_brokers_jvm_xmx": "{{ kafka.jvm_xmx }}"
      }
    },
    "install_dir" : "{{ installation_directory }}/{{ version.kafka }}"
  },
  {% endif %}

  {% if shiva is defined %}
  "shiva": {
    "clusters": {
      "common": {
        "zk_cluster": "common",
        "reporters" : [],
        "servers": {
        {% for server in shiva.servers %}
          "{{ server }}": {
            "runner": true,
            "can_be_master": true,
            "tags": [ "punchline" ]
          }
      {% if not loop.last %}
      ,
      {% endif %} 
      {% endfor %}
        },
        "plugins": [ "logstash", "spark", "storm" ]
      }
    },
    "install_dir": "{{ installation_directory }}/{{ version.shiva }}"
  },
  {% endif %}


  {% if spark is defined %}
  "spark" : {
    "clusters" : {
      "spark_main": {
        "master" : {
          "servers" : {{ spark.masters | tojson }},
          "listen_interface" : "{{ iface }}",
          "master_port" : 7077,
          "rest_port": 6066,
          "ui_port" : 8081
        },
        "slaves" : {
        {% for server in spark.slaves %}
          "{{ server }}" : {
            "listen_interface" : "{{ iface }}",
            "slave_port" : 7078,
            "webui_port" : 8084
          }
          {% if not loop.last %}
          ,
          {% endif %} 
        {% endfor %}
        },
        "spark_workers_by_punchplatform_spark": 1,
        "zk_cluster" : "common",
        "zk_root" : "spark-main",
        "slaves_cpu" : 2,
        "slaves_memory" : "{{ spark.slaves_memory }}"
      }
    },
    "install_dir": "{{ installation_directory }}/{{ version.spark }}"
  },
  {% endif %}

  {% if pyspark is defined %}
  "pyspark" : {
    "install_dir": "{{ installation_directory }}/punchplatform-pyspark-{{ version.pyspark }}",
        "servers": {{ pyspark.servers | tojson }}
  },
  {% endif %}

  {% if minio is defined %}
    "minio": {
      "clusters": {
        "common": {
          "hosts": {{ minio.servers | tojson }},
          "port": "9000"
        }
      },
      "install_dir": "{{ installation_directory }}/{{ version.minio }}"
    },
  {% endif %}

  {% if clickhouse is defined %}
    "clickhouse": {
      "clusters": {
        "common": {
          "shards": {{ clickhouse.shards | tojson }},
          "zk_cluster": "common",
          "zk_root": "clickhouse",
          "http_port": "8123",
          "tcp_port": "9100"
        }
      },
      "install_dir": "{{ installation_directory }}/clickhouse-{{ version.clickhouse }}"
    },
  {% endif %}

  "metricbeat" : {
    "modules" : {
      "system" : {
        "high_frequency_system_metrics": {
          "metricsets" : ["cpu","load","memory"],
          "reporting_interval" : "30s"
        },
        "normal_frequency_system_metrics": {
          "metricsets" : ["fsstat"],
          "reporting_interval" : "5m"
        },
        "slow_frequency_system_metrics": {
          "metricsets" : ["uptime"],
          "reporting_interval" : "1h"
        }
      }
    },
    "elasticsearch" : {
      "cluster_id" : "es_search"
    }
  }
}
