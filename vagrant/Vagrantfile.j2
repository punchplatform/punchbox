unless Vagrant.has_plugin?("vagrant-disksize")
  raise 'vagrant-disksize is not installed! Run vagrant plugin install vagrant-disksize and relauch your punchbox command'
end

unless Vagrant.has_plugin?("vagrant-vbguest")
  raise 'vagrant-vbguest is not installed! Run vagrant plugin install vagrant-vbguest and relauch your punchbox command'
end

Vagrant.configure("2") do |config|

  # Auto install required Vagrant plugins
  config.vagrant.plugins = ["vagrant-disksize"]
  
  # Get your local SSH public key
  PUBLIC_KEY = File.read("#{Dir.home}/.ssh/id_rsa.pub")

  # Speed up VM creation using a precompiled '.vdi'
  config.vm.provider "virtualbox" do |vb|
    vb.linked_clone = true
  end

  {%- for server in targets.info %}

   config.vm.define "{{ server }}" do |server|

      server.vm.box = "{{ os }}"
      server.vm.box_check_update = false
      config.disksize.size = '{{ targets.info[server].disksize }}'

      # Share only sample_confs
      server.vm.synced_folder '.', '/vagrant', disabled: true
      {%- if targets.info[server].synced_pp_conf_folder is defined %}
      server.vm.synced_folder '../punch/build/pp-conf', '/home/vagrant/pp-conf/'
      {%- endif %}
      server.vm.synced_folder '/tmp/archive-log/storage', '/tmp/archive-logs/storage', create: true
      ## Configuration
      server.vm.hostname = "{{ server }}"
      server.vm.network "private_network", ip: "172.28.128.2{{ loop.index }}"

      ## Provisionning 
      server.vm.provision "shell", inline: <<-EOF
        echo 'export LC_ALL=C' >> ~/.bashrc
        echo '#{PUBLIC_KEY}' >> /home/vagrant/.ssh/authorized_keys
      EOF
      {%- if os == 'ubuntu/bionic64' %}
      server.vm.provision "shell", inline: "sudo ln -s /usr/bin/python3 /usr/bin/python"
      server.vm.provision "shell", inline: "sudo apt-get install -y python3-distutils"
      {%- endif %}

      {%- if os == 'centos/7' %}
      server.vm.provision "shell", inline: "sudo yum install -y python3-pip python3-venv"
      server.vm.provision "shell", inline: "echo 'tmpfs /tmp tmpfs size=4g 0 0' >> /etc/fstab"

      # Disabling SElinux
      server.vm.provision "shell", inline: "sudo sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config"
      server.vm.provision "shell", inline: "sudo setenforce 0"

      # Disabling firewalld
      server.vm.provision "shell", inline: "sudo systemctl stop firewalld"
      server.vm.provision "shell", inline: "sudo systemctl disable firewalld"
      server.vm.provision "shell", inline: "sudo systemctl mask --now firewalld"
      {%- endif %}

      {%- if os != 'centos/7' %}
      server.vm.provision "shell", inline: "sed -i '5,10d' /home/vagrant/.bashrc"
      {%- endif %}

      server.vm.provision "shell", inline: "sed -i '/{{ server }}/d' /etc/hosts"
      server.vm.provision "shell", inline: "sudo timedatectl set-timezone Europe/Paris"
      server.vm.provision :shell, :inline => "sudo rm /etc/localtime && sudo ln -s /usr/share/zoneinfo/Europe/Paris /etc/localtime", run: "always"

      {%- for server in targets.info %}
      server.vm.provision "shell", inline: "echo '172.28.128.2{{ loop.index }} {{ server }}' >> /etc/hosts"
      {%- endfor %}

      server.vm.provider :virtualbox do |v|
        v.gui = false
        v.memory = {{ targets.info[server].memory }}
        v.cpus = {{ targets.info[server].cpu }}
      end
    end
  {%- endfor %}
end
