unless Vagrant.has_plugin?("vagrant-disksize")
  raise 'vagrant-disksize is not installed! Run vagrant plugin install vagrant-disksize and relauch your punchbox command'
end

unless Vagrant.has_plugin?("vagrant-vbguest")
  raise 'vagrant-vbguest is not installed! Run vagrant plugin install vagrant-vbguest and relauch your punchbox command'
end

Vagrant.configure("2") do |config|

  # Auto install required Vagrant plugins
  config.vagrant.plugins = ["vagrant-disksize"]
  
  # Get your local SSH public key
  PUBLIC_KEY = File.read("#{Dir.home}/.ssh/id_rsa.pub")

  # Speed up VM creation using a precompiled '.vdi'
  config.vm.provider "virtualbox" do |vb|
    vb.linked_clone = true
  end

  {%- if 'rhel' in os %}
  vag_arg=ARGV[0]
  username=''
  password=''
  if vag_arg == 'up' or vag_arg=='provision'
    print "Enter your redhat username: "
    username=STDIN.gets.chomp
    print "\n"
    print "Enter your password: "
    password=STDIN.noecho(&:gets).chomp
  end
  {%- endif %}
  


  {%- for server in targets.info %}

   config.vm.define "{{ server }}" do |server|

      {#- temporary fix : Linux kernel version in centos vagrant official boxes are not supported by redhat anymore #}
      {#- forcing eurolinux boxes for centos. Replace them later by vagrant official boxes #}
      {%- if os == 'centos/8' %}
      server.vm.box = "generic/centos8"
      {% elif os == 'centos/7' %}
      server.vm.box = "eurolinux-vagrant/centos-7"
      {#- rhel boxes need a redhat dev accout to download packages #}
      {% elif os == 'rhel/7' %}
      server.vm.box = "generic/rhel7"
      {% elif os == 'rhel/8' %}
      server.vm.box = "generic/rhel8"
      {% else %}
      server.vm.box = "{{ os }}"
      {%- endif %}
      server.vm.box_check_update = false
      config.disksize.size = '{{ targets.info[server].disksize }}'

      # Share only sample_confs
      server.vm.synced_folder '.', '/vagrant', disabled: true
      server.vm.synced_folder '/tmp/archive-log/storage', '/tmp/archive-logs/storage', create: true
      ## Configuration
      server.vm.hostname = "{{ server }}"
      server.vm.network "private_network", ip: "192.168.128.2{{ loop.index }}"

      ## Provisionning
      {%- set support_redhat = ["centos/7", "centos/8", "rhel/7", "rhel/8"] %}
      server.vm.provision "shell", inline: <<-EOF
        echo 'export LC_ALL=C' >> ~/.bashrc
        echo '#{PUBLIC_KEY}' >> /home/vagrant/.ssh/authorized_keys
      EOF


      {%- if os in support_redhat %}
      server.vm.provision "shell", inline: "echo 'tmpfs /tmp tmpfs size=4g 0 0' >> /etc/fstab"

      # Disabling SElinux
      server.vm.provision "shell", inline: "sudo sed -i 's/SELINUX=.*/SELINUX=disabled/' /etc/selinux/config"
      server.vm.provision "shell", inline: "sudo setenforce 0"

      # Disabling firewalld
      server.vm.provision "shell", inline: "sudo systemctl stop firewalld"
      server.vm.provision "shell", inline: "sudo systemctl disable firewalld"
      server.vm.provision "shell", inline: "sudo systemctl mask --now firewalld"
      {%- endif %}

      {%- if os not in support_redhat %}
      server.vm.provision "shell", inline: "sed -i '5,10d' /home/vagrant/.bashrc"
      {%- endif %}

      server.vm.provision "shell", inline: "sed -i '/{{ server }}/d' /etc/hosts"
      server.vm.provision "shell", inline: "sudo timedatectl set-timezone Europe/Paris"
      server.vm.provision :shell, :inline => "sudo rm /etc/localtime && sudo ln -s /usr/share/zoneinfo/Europe/Paris /etc/localtime", run: "always"

      {%- if 'rhel' in os  %}
      server.vm.provision "shell", :inline => "sudo subscription-manager register --username $1 --password $2", :args => [username, password]
      server.vm.provision "shell", inline: "sudo subscription-manager attach"
      {%- endif %}

      {%- for server in targets.info %}
      server.vm.provision "shell", inline: "echo '192.168.128.2{{ loop.index }} {{ server }}' >> /etc/hosts"
      {%- endfor %}

      # Some hardening: UMASK will remove group and others any rights by default
      
      
      {%- if ( 'rhel' in os ) or ( 'centos' in os )  %}
      server.vm.provision "shell", inline: "sed -i 's/UMASK\s*[0-9]*/UMASK      077/g' /etc/login.defs"
       server.vm.provision "shell", inline: "sed -i 's/umask 0[0-9][0-9]/umask 077/g' /etc/bashrc"
      {%- endif %}
      {%- if os == 'centos/8' %}
      server.vm.provision "shell", inline: 'sed -i -E "s/mirror(list)?\.centos\.org/vault.centos.org/g" /etc/yum.repos.d/*'
      server.vm.provision "shell", inline: 'sed -i -E "s/^mirrorlist/#mirrorlist/g" /etc/yum.repos.d/*'
      server.vm.provision "shell", inline: 'sed -i -E "s/^#*baseurl/baseurl/g" /etc/yum.repos.d/*'
      {%- endif %}
      {%- if ( 'ubuntu' in os) %}
      server.vm.provision "shell", inline: "sed -E -i 's/UMASK\\s+[0-9]+/UMASK\\t\\t077/g' /etc/login.defs"
      server.vm.provision "shell", inline: "sed -E -i 's/^USERGROUPS_ENAB\\s*yes/USERGROUPS_ENAB no/g' /etc/login.defs"
      server.vm.provision "shell", inline: "sed -E -i 's/umask 0[0-9][0-9]/umask 077/g' /etc/profile"
      {%- endif %}


      server.vm.provider :virtualbox do |v|
        v.gui = false
        v.memory = {{ targets.info[server].memory }}
        v.cpus = {{ targets.info[server].cpu }}
      end

      #To unregister the VM from the redhat developer account
      {%- if 'rhel' in os %}
      server.trigger.before :destroy do |trigger|
        trigger.warn = "Unregister the VM from redhat developer account"
        trigger.run_remote = {inline: "sudo subscription-manager unregister"}
      end
     {%- endif %}

    end
  {%- endfor %}
end
