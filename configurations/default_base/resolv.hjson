{ 

   
   // All ES input/output nodes (Storm nodes)
   elasticsearch_nodes:{
      selection:{
         tenant:*
         channel:*
         runtime:*
      }
      match:$.dag[?(@.type=='elasticsearch_input' || @.type=='elasticsearch_output')].settings
      additional_values:{
         http_hosts:[
            {
               host: server2
               port:9200
            }
         ]
         
      }
   }

   // All ES spark nodes 
   elastic_nodes:{ 
      selection:{ 
         tenant:*
         channel:*
         runtime:*
      }
      match:$.dag[?(@.type=='elastic_batch_input' || @.type=='elastic_batch_output' || @.type=='elastic_stream_output' || @.type=='elastic_input' || @.type=='elastic_query_stats' || @.type=='python_elastic_input' || @.type=='python_elastic_output')].settings
      additional_values:{ 
         nodes:[ 
            server2
         ]
         
      }
   }
   


   
   // All Kafka input/output nodes (Storm nodes)
   kafka_input:{ 
      selection:{ 
         tenant:*
         channel:*
         runtime:*
      }
      match:$.dag[?(@.type=='kafka_input')].settings
      additional_values:{ 
         brokers: local
         bootstrap.servers:server2:9092
         metric_cluster_id:local
         
      }
   }
   

      
   // All Kafka input/output nodes (Storm nodes)
   kafka_output:{ 
      selection:{ 
         tenant:*
         channel:*
         runtime:*
      }
      match:$.dag[?(@.type=='kafka_output')].settings
      additional_values:{ 
         brokers: local
         bootstrap.servers:server2:9092
         metric_cluster_id:local
         
      }
   }
   

   
 // All Kafka stream input/output nodes (Spark nodes)
   kafka_stream_input:{
      selection:{
         tenant:*
         channel:*
         runtime:*
      }
      match:$.dag[?(@.type=='kafka_stream_input' || @.type=='kafka_stream_output')].settings
      additional_values:{
         brokers:[
            {
               port:9092
               host:localhost
            }
         ]
         
      }
   }
      

   
   // All Kafka reporters
   kafka_reporter:{ 
      selection:{ 
         tenant:*
         channel:*
         runtime:*
      }
      match:$.metrics.reporters[?(@.type=='kafka')]
      additional_values:{ 
         brokers: local
         bootstrap.servers:server2:9092
         topic: platform-events
         reporting_interval: 30
         encoding: json
         
      }
   }
   

   

   // All Elasticsearch metrics reporters
   es_metrics_reporter:{ 
      selection:{ 
         tenant:*
         channel:*
         runtime:*
      }
      match:$.metrics.reporters[?(@.type=='elasticsearch')]
      additional_values:{ 
         cluster_name: es_search
         metric_document_field_name: log
         reporting_interval: 30
         http_hosts:[ 
            { 
               host:server2
               port:9200
            }
         ]
         
      }
   }


   // All plan persistence
   persistence_plan_resolver:{ 
      selection:{ 
         tenant:*
         channel:*
         runtime:*
      }
      match:$.settings.persistence[?(@.type=='elasticsearch')]
      additional_values:{ 
         nodes:[ 
           	{
               host:server2
               port:9200
        	   } 
         ]
         
      }
   }
   // Archive houeskeeping
   archive_housekeeping:{ 
      selection:{ 
         tenant:*
         channel:*
         runtime:*
      }
      match:$.archiving_pools[*]
      additional_values:{ 
         es_cluster_id: es_search
         
      }
   }
   // Channel monitoring 
   channel_monitoring:{ 
      selection:{ 
         tenant:*
         channel: monitoring
         runtime:*
      }
      match: .elasticsearch
      additional_values:{ 
         es_cluster_id: es_search
         
      }
   }
   // Channel monitoring reporters 
   channel_monitoring_kafka_reporters:{ 
      selection:{ 
         tenant:*
         channel: monitoring
         runtime:*
      }
      match:$.reporters[?(@.type=='kafka')]
      additional_values:{ 
       brokers: local
       bootstrap.servers:server2:9092

       topic: platform-events
       reporting_interval: 30
       encoding: json
       
      }
   }

    channel_monitoring_es_reporters:{ 
      selection:{ 
         tenant:*
         channel: monitoring
         runtime:*
      }
      match:$.reporters[?(@.type=='elasticsearch')]
      additional_values:{ 
         cluster_name: es_search

        reporting_interval: 30
         http_hosts:[ 
            { 
               host:server2
               port:9200
            }
         ]
         
      }
   }
   
   
}